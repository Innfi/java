/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.52.Final'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '4.0.0-rc-2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //implementation group: 'org.mongodb', name: 'mongodb-driver-sync', version: '4.1.1'
    implementation 'org.mongodb:mongodb-driver-sync:4.2.3'
    
    // https://mvnrepository.com/artifact/redis.clients/jedis
    implementation group: 'redis.clients', name: 'jedis', version: '3.7.0'


    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'playground.App'
}

test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}